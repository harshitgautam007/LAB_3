# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class MemberInformation(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, member_id: int=None, member_name: str=None, organization_id: str=None, email: str=None):  # noqa: E501
        """MemberInformation - a model defined in Swagger

        :param member_id: The member_id of this MemberInformation.  # noqa: E501
        :type member_id: int
        :param member_name: The member_name of this MemberInformation.  # noqa: E501
        :type member_name: str
        :param organization_id: The organization_id of this MemberInformation.  # noqa: E501
        :type organization_id: str
        :param email: The email of this MemberInformation.  # noqa: E501
        :type email: str
        """
        self.swagger_types = {
            'member_id': str,
            'member_name': str,
            'organization_id': str,
            'email': str
        }

        self.attribute_map = {
            'member_id': 'member_id',
            'member_name': 'member_name',
            'organization_id': 'organization_id',
            'email': 'email'
        }
        self._member_id = member_id
        self._member_name = member_name
        self._organization_id = organization_id
        self._email = email

    @classmethod
    def from_dict(cls, dikt) -> 'MemberInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Member Information of this MemberInformation.  # noqa: E501
        :rtype: MemberInformation
        """
        return util.deserialize_model(dikt, cls)

    @property
    def member_id(self) -> str:
        """Gets the member_id of this MemberInformation.

        The ID of the member  # noqa: E501

        :return: The member_id of this MemberInformation.
        :rtype: int
        """
        return self._member_id

    @member_id.setter
    def member_id(self, member_id: str):
        """Sets the member_id of this MemberInformation.

        The ID of the member  # noqa: E501

        :param member_id: The member_id of this MemberInformation.
        :type member_id: int
        """

        self._member_id = member_id

    @property
    def member_name(self) -> str:
        """Gets the member_name of this MemberInformation.

        The name of the member  # noqa: E501

        :return: The member_name of this MemberInformation.
        :rtype: str
        """
        return self._member_name

    @member_name.setter
    def member_name(self, member_name: str):
        """Sets the member_name of this MemberInformation.

        The name of the member  # noqa: E501

        :param member_name: The member_name of this MemberInformation.
        :type member_name: str
        """

        self._member_name = member_name

    @property
    def organization_id(self) -> str:
        """Gets the organization_id of this MemberInformation.

        The ID of the Organization, the member belongs to.  # noqa: E501

        :return: The organization_id of this MemberInformation.
        :rtype: str
        """
        return self._organization_id

    @organization_id.setter
    def organization_id(self, organization_id: str):
        """Sets the organization_id of this MemberInformation.

        The ID of the Organization, the member belongs to.  # noqa: E501

        :param organization_id: The organization_id of this MemberInformation.
        :type organization_id: str
        """

        self._organization_id = organization_id

    @property
    def email(self) -> str:
        """Gets the email of this MemberInformation.

        The email of the member  # noqa: E501

        :return: The email of this MemberInformation.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this MemberInformation.

        The email of the member  # noqa: E501

        :param email: The email of this MemberInformation.
        :type email: str
        """

        self._email = email
